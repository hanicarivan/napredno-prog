//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "ForgotPassUnit.h"
#include "LoginUnit.h"
#include "dm1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TFForgot *FForgot;
//---------------------------------------------------------------------------
__fastcall TFForgot::TFForgot(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TFForgot::BtnCloseClick(TObject *Sender)
{
	FForgot->Hide();
	FForgot->Close();
}
//---------------------------------------------------------------------------
void __fastcall TFForgot::FormClose(TObject *Sender, TCloseAction &Action)
{
	FLogin->ShowModal();
}
//---------------------------------------------------------------------------

int findConfirmationKey(int key){
	for(int i = 10000000; i < 99999999; i++){
		if(i = key)
			return i;
	}
}

void __fastcall TFForgot::BtnConfirmClick(TObject *Sender)
{
    TLocateOptions Opts;
	Opts.Clear();
	Variant VAR[2];
	VAR[0] = Variant(EUsername->Text);
	VAR[1] = Variant(EConfirmation->Text);
	Variant LookupResults;
	if(DMUsers->TUsers->Locate("username;key",VarArrayOf(VAR,1),Opts)){
		LookupResults = DMUsers->TUsers->Lookup("username", EUsername->Text, "id");
		int test = findConfirmationKey(StrToInt(EConfirmation->Text));
		ShowMessage(test);
		ShowMessage(LookupResults);
	} else {
		Application->MessageBox(L"Wrong Username or Confirmation key!",L"Error!",MB_OK|MB_ICONWARNING);
    }

}
//---------------------------------------------------------------------------

